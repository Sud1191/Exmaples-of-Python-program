1. Write a Python program to sort a list of dictionaries using Lambda.
Original list of dictionaries :
[{'make': 'Nokia', 'model': 216, 'color': 'Black'}, {'make': 'Mi Max', 'model': '2', 'color': 'Gold'}, {'make': 'Samsung', 'model': 7, 'color': 'Blue'}]
Sorting the List of dictionaries :
[{'make': 'Nokia', 'model': 216, 'color': 'Black'}, {'make': 'Samsung', 'model': 7, 'color': 'Blue'}, {'make': 'Mi Max', 'model': '2', 'color': 'Gold'}]
==>
d = [{'make': 'Nokia', 'model': 216, 'color': 'Black'}, {'make': 'Mi Max', 'model': '2', 'color': 'Gold'}, {'make': 'Samsung', 'model': 7, 'color': 'Blue'}]
sorted_d = sorted(d, key=lambda d: d['color'])
print(sorted_d)
--------------------------------------------------------------------
2. Write a Python program to filter a list of integers using Lambda.
Original list of integers:
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
Even numbers from the said list:
[2, 4, 6, 8, 10]
Odd numbers from the said list:
[1, 3, 5, 7, 9]
==>
l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
even_l = list(filter(lambda x: x%2 ==0, l))
print('List of even numbers:', even_l)
odd_l = list(filter(lambda x: x%2 !=0, l))
print('List of Odd Numbers:', odd_l)
------------------------------------------------------------
3. Write a Python program to square and cube every number in a given list of integers using Lambda.
Original list of integers:
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
Square every number of the said list:
[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]
Cube every number of the said list:
[1, 8, 27, 64, 125, 216, 343, 512, 729, 1000]
==>
l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
square = list(map(lambda x: x**2 , l))
cube = list(map(lambda x: x**3, l))
print('Square off the given numbers :', square)
print('Cube of the given Numbers:', cube)
------------------------------------------------
4. Write a Python program to find if a given string starts with a given character using Lambda.
Sample Output:
True
False
==>
d = 'java'
s = 'Python'
p = lambda a: True if a.startswith('P') else False
print('Python', p(s))
print("Java", p(d))
-----------------------------------------------------
Write a Python program to extract year, month, date and time using Lambda.
Sample Output:
2020-01-15 09:03:32.744178
2020
1
15
09:03:32.744178
==>
import datetime
now = datetime.datetime.now()
print(now)
year = lambda x: x.year
month = lambda x: x.month
day = lambda x: x.day
t = lambda x: x.time()
print(year(now))
print(month(now))
print(day(now))
print(t(now))
------------------------------------------------------
5. Write a Python program to check whether a given string is number or not using Lambda.
==>
s = 'Python'
def num_check(string):
    check_num = lambda n: True if n.replace('.','',1).isdigit() else False
    print(check_num(string))
num_check(s)
num_check("100")
num_check('5G')
num_check('25.24')
-----------------------------------------------------
6. Write a Python program to find intersection of two given arrays using Lambda.
Original arrays:
[1, 2, 3, 5, 7, 8, 9, 10]
[1, 2, 4, 8, 9]
Intersection of the said arrays: [1, 2, 8, 9]
==>
a = [1, 2, 3, 5, 7, 8, 9, 10]
b = [1, 2, 4, 8, 9]
c = list(filter(lambda x: x in a, b))
print(c)
-----------------------------------------------------------
7. Write a Python program to rearrange positive and negative numbers in a given array using Lambda.
Original arrays:
[-1, 2, -3, 5, 7, 8, 9, -10]
Rearrange positive and negative numbers of the said array:
[2, 5, 7, 8, 9, -10, -3, -1]
Solution 1==>
l = [-1, 2, -3, 5, 7, 8, 9, -10]
ntv_l = []
ptv_l = []
for i in l:
    if i < 0:
       ntv_l.append(i)
    else:
        ptv_l.append(i)
ntv_l.sort()
ptv_l.sort()
print(ptv_l+ntv_l)
Solution 2==>
l = [-1, 2, -3, 5, 7, 8, 9, -10]
result = sorted(l, key=lambda i: 0 if i<0 else -1/i)
print(result)
-----------------------------------------------------------------
8. Write a Python program to count the even, odd numbers in a given array of integers using Lambda
Original arrays:
[1, 2, 3, 5, 7, 8, 9, 10]
Number of even numbers in the above array: 3
Number of odd numbers in the above array: 5
Solution1   ==>
l = [1, 2, 3, 5, 7, 8, 9, 10]
odd = len(list(filter(lambda i: i%2 != 0, l)))
even = len(list(filter(lambda i: i%2 == 0, l)))
print("Odd numbers in list:",odd)
print("Even Numbers in list:", even)
Solution 2  ==>
list1 = [1, 2, 3, 5, 7, 8, 9, 10]
def count_even_odd(l):
    even = 0
    odd = 0
    for i in l:
        if i%2 == 0:
            even+=1
        else:
            odd+=1
    print("Odd numbers in list:",odd)
    print("Even Numbers in list:", even)
count_even_odd(list1)
-------------------------------------------------------------
9. Write a Python program to find the values of length six in a given list using Lambda.
Sample Output:
Monday
Friday
Sunday
Solution 1 ==>
list1 = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday','Sunday']
result = list(filter(lambda i: print(i) if len(i)==6 else None,list1))
Solution 2 ==>
list1 = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday','Sunday']
result = list(filter(lambda i: len(i)==6, list1))
print(result)
--------------------------------------------------------------------------------------
10. Write a Python program to add two given lists using map and lambda.
Original list:
[1, 2, 3]
[4, 5, 6]
Result: after adding two list
[5, 7, 9]
Solution  ==>>
list_1 = [1, 2, 3]
list_2 = [4, 5, 6]
result = list(map(lambda a,b: a+b,list_1, list_2))
print(result)
---------------------------------------------------------------
11. Write a Python program to find the second lowest grade of any student(s) from the given 
names and grades of each student using lists and lambda. Input number of students, 
names and grades of each student.
Input number of students: 5
Name: S ROY
Grade: 1
Name: B BOSE
Grade: 3
Name: N KAR
Grade: 2
Name: C DUTTA
Grade: 1
Name: G GHOSH
Grade: 1
Names and Grades of all students:
[['S ROY', 1.0], ['B BOSE', 3.0], ['N KAR', 2.0], ['C DUTTA', 1.0], ['G GHOSH', 1.0]]
Second lowest grade: 2.0
Names:
N KAR
==>
l =[]
n = int(input('Enter the total number of Students :'))
for i in range(0, n):
    name = input('Enter Student Name:')
    grade = int(input(('Enter the Grade:')))
    l.append([name,grade])
print("Names and Grades of all Students:")
print(l)
order = sorted(l, key=lambda x: int(x[1]))
for i in range(n):
   if order[i][1] != order[0][1]:
       second_low = order[i][1]
       break
print("\nSecond lowest grade: ",second_low)
sec_student_name = [x[0] for x in order if x[1] == second_low]
sec_student_name.sort()
print("\nNames:")
for s_name in sec_student_name:
   print(s_name)
-----------------------------------------------------------------------
